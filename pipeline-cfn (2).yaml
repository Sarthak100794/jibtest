---
AWSTemplateFormatVersion: 2010-09-09
Parameters:
  GitHubRepo:
    Type: String
  GitHubBranch:
    Type: String
  GitHubToken:
    Type: String
    NoEcho: true
  GitHubUser:
    Type: String
  ArtifactBucket:
    Type: String
  S3ModelBucket:
    Type: String
  StateMachineName:
    Description: Name of State Machine
    Type: String
    Default: MLDeployStepFunction

Resources:
  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource:
                  - !Sub arn:aws:s3:::${ArtifactBucket}/*
                Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
              - Resource: "*"
                Effect: Allow
                Action:                  
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                  - iam:PassRole
                  - states:DescribeStateMachine
                  - states:StartExecution
                  - states:DescribeExecution

  SageMakerRole:
      Type: AWS::IAM::Role
      Properties:       
        AssumeRolePolicyDocument: 
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - sagemaker.amazonaws.com
              Action:
                - 'sts:AssumeRole'
        Description: String
        ManagedPolicyArns:
          - !Ref SagemakerPolicy    
        Path: /      
  SagemakerPolicy:
      Type: 'AWS::IAM::ManagedPolicy'
      Properties:
        Description: Step function use policy
        PolicyDocument: !Sub
            - |-
              {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                              "Effect": "Allow",
                              "Action": [
                                  "cloudwatch:PutMetricData",                                  
                                  "logs:CreateLogGroup",
                                  "logs:CreateLogStream",
                                  "logs:DescribeLogStreams",
                                  "logs:PutLogEvents",
                                  "logs:GetLogEvents",                                                                                             
                                  "sagemaker:*"                                                             
                              ],
                              "Resource": [
                                  "*"
                              ]
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "iam:PassRole"
                            ],
                            "Resource": "*",
                            "Condition": {
                                "StringEquals": {
                                    "iam:PassedToService": "sagemaker.amazonaws.com"
                                }
                            }
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "ecr:GetAuthorizationToken",
                                "ecr:BatchCheckLayerAvailability",
                                "ecr:GetDownloadUrlForLayer",
                                "ecr:BatchGetImage"
                            ],
                            "Resource": ["*"]
                        },                        
                        {
                            "Effect": "Allow",
                            "Action": [
                                "s3:ListBucket",
                                "s3:GetObject",
                                "s3:PutObject",
                                "s3:DeleteObject"
                            ],
                            "Resource": [
                                "arn:aws:s3:::${S3ModelBucket}",
                                "arn:aws:s3:::${S3ModelBucket}/*"
                            ]
                        }
                      ]
              }
            - {
                AccountID: !Ref AWS::AccountId, 
                Region: !Ref AWS::Region,
                S3ModelBucket: !Ref S3ModelBucket  
              } 

  StepFunctionsRole:
      Type: AWS::IAM::Role
      Properties:       
        AssumeRolePolicyDocument: 
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - states.amazonaws.com
              Action:
                - 'sts:AssumeRole'
        Description: String
        ManagedPolicyArns:
          - !Ref StepFunctionsPolicy    
        Path: /      
  StepFunctionsPolicy:
      Type: 'AWS::IAM::ManagedPolicy'
      DependsOn: SageMakerRole
      Properties:
        Description: Step function use policy
        PolicyDocument: !Sub
            - |-
              {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                              "Effect": "Allow",
                              "Action": [
                                  "lambda:InvokeFunction",                                  
                                  "states:StartExecution"                                                                 
                              ],
                              "Resource": [
                                  "*"
                              ]
                          },                          
                          {
                            "Effect": "Allow",
                            "Action": [
                              "sagemaker:CreateTrainingJob",
                              "sagemaker:DescribeTrainingJob",
                              "sagemaker:StopTrainingJob",
                              "sagemaker:CreateModel",
                              "sagemaker:CreateTransformJob",
                              "sagemaker:CreateEndpointConfig",
                              "sagemaker:CreateEndpoint"
                            ],
                            "Resource": [
                              "arn:aws:sagemaker:${Region}:${AccountID}:training-job/*",
                              "arn:aws:sagemaker:${Region}:${AccountID}:model/*",
                              "arn:aws:sagemaker:${Region}:${AccountID}:transform-job/*",
                              "arn:aws:sagemaker:${Region}:${AccountID}:endpoint-config/*",
                              "arn:aws:sagemaker:${Region}:${AccountID}:endpoint/*"
                            ]
                          },
                          {
                            "Effect": "Allow",
                            "Action": [
                              "sagemaker:ListTags"
                            ],
                            "Resource": [
                              "*"
                            ]
                          },
                          {
                            "Effect": "Allow",
                            "Action": [
                              "iam:PassRole"
                            ],
                            "Resource": [
                              "${SageMakerRole}",
                              "arn:aws:iam::685306736016:role/sam-sf-sagemaker-workflow-SageMakerRole-1729T795LG4IB"
                            ],
                            "Condition": {
                              "StringEquals": {
                                "iam:PassedToService": "sagemaker.amazonaws.com"
                              }
                            }
                          },
                          {
                            "Effect": "Allow",
                            "Action": [
                              "events:PutTargets",
                              "events:PutRule",
                              "events:DescribeRule"
                            ],
                            "Resource": [
                              "arn:aws:events:${Region}:${AccountID}:rule/StepFunctionsGetEventsForSageMakerTrainingJobsRule",
                              "arn:aws:events:${Region}:${AccountID}:rule/StepFunctionsGetEventsForSageMakerTransformJobsRule"
                            ]
                          }  
                      ]
                }
            - {
                AccountID: !Ref AWS::AccountId, 
                Region: !Ref AWS::Region,
                SageMakerRole: !GetAtt SageMakerRole.Arn
              }

  MLOpsStateMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      Name: !Sub ${StateMachineName}-${AWS::AccountId}
      DefinitionS3Location:
        Bucket: !Ref ArtifactBucket
        Key: model.json
      DefinitionSubstitutions:
        SagemakerRoleArn: !GetAtt SageMakerRole.Arn
        S3ModelBucket: !Ref S3ModelBucket
      RoleArn: !GetAtt StepFunctionsRole.Arn

  AppPipelineWebhook:
    Type: AWS::CodePipeline::Webhook
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Ref GitHubToken
      Filters:
        - 
          JsonPath: "$.ref"
          MatchEquals: refs/heads/master
      TargetPipeline: !Ref Pipeline
      TargetAction: CodeRepo
      Name: AppPipelineWebhook
      TargetPipelineVersion: !GetAtt Pipeline.Version
      RegisterWithThirdParty: true

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Stages:
        - Name: SourceCode
          Actions:
            - Name: CodeRepo
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              Configuration:
                Owner: !Ref GitHubUser
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubToken
                PollForSourceChanges: false
              OutputArtifacts:
                - Name: App
              RunOrder: 1       
        - Name: ModelCreateDeploy
          Actions:     
            - Name: ExecuteSagemakerMLOpsStepFunction
              ActionTypeId:
                Category: Invoke
                Owner: AWS
                Version: 1
                Provider: StepFunctions
              OutputArtifacts:
                - Name: myOutputArtifact
              Configuration:
                StateMachineArn: !Ref MLOpsStateMachine
                ExecutionNamePrefix: ml-deploy
                Input: '{
                        "commitID": "101910181021",
                        "imageUri": "685306736016.dkr.ecr.eu-west-1.amazonaws.com/codepipeline-ecr-build-sf-execution-repository-hnkbim8hx68j:3d9427f9-10-05-2021-02-37-28",
                        "S3ModelArtifacts" :"s3://sagemaker-project-ml-1019/output/3d9427f9-10-04-2021-12-39-28/output/model.tar.gz"
                      }'
              RunOrder: 2
Outputs:
  PipelineUrl:
    Value: !Sub https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${Pipeline}
  ArtifactBucket:
    Value: !Ref ArtifactBucket